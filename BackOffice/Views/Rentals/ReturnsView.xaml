<UserControl
    x:Class="BackOffice.Views.Rentals.ReturnsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:BackOffice.Views.CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:generic="clr-namespace:BackOffice.Resources.Generic"
    xmlns:helpers="clr-namespace:BackOffice.Helpers"
    xmlns:local="clr-namespace:BackOffice.Views.Rentals"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rentals="clr-namespace:BackOffice.ViewModels.Rentals"
    xmlns:res="clr-namespace:BackOffice.Resources.Rentals"
    xmlns:rq="clr-namespace:BackOffice.Resources.RentalRequests"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.DataContext>
        <rentals:ReturnsViewModel x:Name="DataContext" />
    </UserControl.DataContext>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical">
            <Grid>
                <Border Style="{StaticResource CreateEditBorderStyle}" Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <Label Content="{x:Static res:Resources.IsCustomerLate}" />
                        <CheckBox x:Name="IsCustomerLateField" IsChecked="{Binding PostRentalReport.IsCustomerLate, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            helpers:ValidationHelper.PropertyName="IsCustomerLate"
                            Foreground="{StaticResource ErrorBrush}"
                            Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                        <Label Content="{x:Static res:Resources.IsCarDamaged}" />
                        <CheckBox x:Name="IsCarDamagedField" IsChecked="{Binding PostRentalReport.IsCarDamaged, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            helpers:ValidationHelper.PropertyName="IsCarDamaged"
                            Foreground="{StaticResource ErrorBrush}"
                            Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                        <Label Content="{x:Static res:Resources.IsCarRefueled}" />
                        <CheckBox x:Name="IsCarRefueledField" IsChecked="{Binding PostRentalReport.IsCarRefueled, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            helpers:ValidationHelper.PropertyName="IsCarRefueled"
                            Foreground="{StaticResource ErrorBrush}"
                            Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                        <Label Content="{x:Static res:Resources.DepositDeduction}" />
                        <TextBox Text="{Binding EditableModel.DepositDeduction, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}" />
                        <TextBlock
                            helpers:ValidationHelper.PropertyName="DepositDeduction"
                            Foreground="{StaticResource ErrorBrush}"
                            Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                        <Label Content="{x:Static res:Resources.DamageFee}" />
                        <TextBox Text="{Binding EditableModel.DamageFee, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}" />
                        <TextBlock
                            helpers:ValidationHelper.PropertyName="DamageFee"
                            Foreground="{StaticResource ErrorBrush}"
                            Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                        <StackPanel Orientation="Horizontal">
                            <Button
                                Width="75"
                                Command="{Binding MarkReturnCommandWithIssues}"
                                Content="{x:Static generic:Resources.Save}"
                                IsEnabled="{Binding HasErrors, Converter={StaticResource InverseBooleanConverter}}"
                                Style="{StaticResource DefaultButtonStyle}" />

                            <Button
                                Width="75"
                                Command="{Binding SwitchToListModeCommand}"
                                Content="{x:Static generic:Resources.Cancel}"
                                Style="{StaticResource DefaultButtonStyle}" />
                        </StackPanel>

                    </StackPanel>
                </Border>
            </Grid>
 
            <StackPanel Visibility="{Binding IsListVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="10,0,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding LoadModelsCommand}" Style="{StaticResource DefaultButtonStyle}">
                            <Image Source="/ViewResources/Icons/reload.png" />
                        </Button>

                        <Button Command="{Binding MarkReturnCommand}" Style="{StaticResource DefaultButtonStyle}">
                            <Image Source="/ViewResources/Icons/check_circle.png" />
                        </Button>

                        <Button Command="{Binding SwitchToEditModeCommand}" Style="{StaticResource DefaultButtonStyle}">
                            <Image Source="/ViewResources/Icons/return_issue.png" />
                        </Button>
                    </StackPanel>

                    <customControls:SearchControl Grid.Column="0" SearchCommand="{Binding SearchCommand}" />
                </Grid>

                <DataGrid
                    x:Name="MainDataGrid"
                    ItemsSource="{Binding Models}"
                    SelectedItem="{Binding EditableModel, Mode=TwoWay}"
                    Style="{StaticResource DefaultDataGridStyle}">
                    <DataGrid.InputBindings>
                        <MouseBinding
                            Command="{Binding ShowDetailedInfoCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                            Gesture="LeftDoubleClick" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding RentalId}" Header="ID" />
                        <DataGridTextColumn Header="{x:Static rq:Resources.Customer}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="Customer.FirstName" />
                                    <Binding Path="Customer.LastName" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{x:Static rq:Resources.Vehicle}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding StringFormat="{}{0} {1} - {2}">
                                    <Binding Path="Vehicle.VehicleModel.VehicleBrand.Name" />
                                    <Binding Path="Vehicle.VehicleModel.Name" />
                                    <Binding Path="Vehicle.LicensePlate" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn
                            Binding="{Binding RentalStatus}"
                            CellStyle="{StaticResource RentalStatusCellStyle}"
                            Header="Status" />
                        <DataGridTextColumn
                            Binding="{Binding PaymentStatus}"
                            CellStyle="{StaticResource PaymentStatusCellStyle}"
                            Header="{x:Static rq:Resources.PaymentStatus}" />
                        <DataGridTextColumn Binding="{Binding StartDate, StringFormat=dd/MM/yyyy}" Header="{x:Static rq:Resources.StartDate}" />
                        <DataGridTextColumn Binding="{Binding EndDate, StringFormat=dd/MM/yyyy}" Header="{x:Static rq:Resources.EndDate}" />
                        <DataGridTextColumn Binding="{Binding PickupDateTime, StringFormat=dd/MM/yyyy HH:mm}" Header="{x:Static res:Resources.PickupDateTime}" />
                        <DataGridTextColumn Binding="{Binding FinishDateTime, StringFormat=dd/MM/yyyy HH:mm}" Header="{x:Static res:Resources.FinishDateTime}" />
                        <DataGridTextColumn
                            Binding="{Binding DepositStatus}"
                            CellStyle="{StaticResource DepositStatusCellStyle}"
                            Header="{x:Static res:Resources.DepositStatus}" />
                        <DataGridTextColumn Binding="{Binding DepositAmount}" Header="{x:Static res:Resources.DepositAmount}" />
                        <DataGridTextColumn Binding="{Binding DepositRefundAmount}" Header="{x:Static res:Resources.DepositRefundAmount}" />
                        <DataGridTextColumn Binding="{Binding Cost, StringFormat=N2}" Header="{x:Static res:Resources.Cost}" />
                        <DataGridTextColumn Binding="{Binding FinalCost, StringFormat=N2}" Header="{x:Static res:Resources.FinalCost}" />
                        <DataGridTextColumn Header="{x:Static res:Resources.StartedByEmployee}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="StartedByEmployee.FirstName" />
                                    <Binding Path="StartedByEmployee.LastName" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding CreatedDate}" Header="{x:Static generic:Resources.CreatedDate}" />
                        <DataGridTextColumn Binding="{Binding ModifiedDate}" Header="{x:Static generic:Resources.ModifiedDate}" />
                        <DataGridTextColumn
                            Binding="{Binding DeletedDate}"
                            Header="{x:Static generic:Resources.DeletedDate}"
                            Visibility="{Binding ShowDeleted, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference Name=DataContext}}" />
                    </DataGrid.Columns>
                </DataGrid>

                <customControls:PaginationControl
                    CanLoadNextPage="{Binding CanLoadNextPage}"
                    CanLoadPreviousPage="{Binding CanLoadPreviousPage}"
                    CurrentPage="{Binding CurrentPage}"
                    ModelsPerPage="{Binding PageSize}"
                    NextPageCommand="{Binding LoadNextPageCommand}"
                    PreviousPageCommand="{Binding LoadPreviousPageCommand}"
                    TotalItemCount="{Binding TotalItemCount}" />
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
