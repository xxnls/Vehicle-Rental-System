<UserControl x:Class="BackOffice.Views.Other.AddressesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BackOffice.Views.Other"
             xmlns:other="clr-namespace:BackOffice.ViewModels.Other"
             xmlns:customControls="clr-namespace:BackOffice.Views.CustomControls"
             xmlns:res="clr-namespace:BackOffice.Resources.Addresses"
             xmlns:generic="clr-namespace:BackOffice.Resources.Generic"
             xmlns:helpers="clr-namespace:BackOffice.Helpers"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <other:AddressesViewModel x:Name="DataContext"/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <Style TargetType="Label">
            <Setter Property="ContentStringFormat" Value="{}{0}:"/>
        </Style>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical">
        <Grid Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Style="{StaticResource CreateEditBorderStyle}">
                <StackPanel Orientation="Vertical">
                    <!-- Input Fields -->
                    <Label Content="{x:Static res:Resources.Country}"/>
                    <TextBox Text="{Binding EditableModel.Country.Name, UpdateSourceTrigger=PropertyChanged}" 
                             IsReadOnly="True"/>
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="Country"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />
                    <Button Content="{x:Static res:Resources.SelectCountry}" 
                            Command="{Binding ShowSelectorDialogCommand}"
                            CommandParameter="{Binding SelectCountryParameters}"
                            Style="{StaticResource DefaultButtonStyle}"
                            Width="100"
                            HorizontalAlignment="Left">
                    </Button>

                    <Label Content="{x:Static res:Resources.City}"/>
                    <TextBox x:Name="EditCityField" Text="{Binding EditableModel.City, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="City"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.ZipCode}"/>
                    <TextBox x:Name="EditZipCodeField" Text="{Binding EditableModel.ZipCode, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="ZipCode"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.FirstLine}"/>
                    <TextBox x:Name="EditFirstLineField" Text="{Binding EditableModel.FirstLine, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="FirstLine"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.SecondLine}"/>
                    <TextBox x:Name="EditSecondLineField" Text="{Binding EditableModel.SecondLine, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="SecondLine"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />
                </StackPanel>
            </Border>

            <!-- Action Buttons -->
            <customControls:CreateEditSaveCancelControl Grid.Row="1"
                                            SaveCommand="{Binding UpdateModelCommand}"
                                            CancelCommand="{Binding SwitchToListModeCommand}"
                                            HasErrors="{Binding HasErrors}"/>
        </Grid>

        <!-- List Mode -->
        <StackPanel Visibility="{Binding IsListVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!-- CRUD Buttons -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <customControls:CRUDButtonsControl LoadCommand="{Binding LoadModelsCommand}"
                                   AddCommand="{Binding SwitchToCreateModeCommand}"
                                   EditCommand="{Binding SwitchToEditModeCommand}"
                                   DeleteCommand="{Binding DeleteModelCommand}"
                                   DeleteVisibility="{Binding ShowDeleted, Converter={StaticResource InverseBooleanConverter}}"
                                   RestoreCommand="{Binding RestoreModelCommand}"
                                   RestoreCommandParameter="{Binding EditableModel.AddressId}"
                                   RestoreVisibility="{Binding ShowDeleted}"
                                   Grid.Column="0"/>

                <customControls:SearchControl Grid.Column="1"
                                  SearchCommand="{Binding SearchCommand}"/>

                <customControls:FilterButtonsControl ShowFilterOptionsCommand="{Binding ShowFilterOptionsCommand}"
                                         ShowDeletedModelsCommand="{Binding ShowDeletedModelsCommand}"
                                         Grid.Column="2"
                                         Margin="0,0,5,0"/>
            </Grid>

            <!-- Filter Options -->
            <customControls:FilterOptionsControl Visibility="{Binding IsFiltering, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     CreatedBefore="{Binding CreatedBefore, Mode=TwoWay}"
                                     CreatedAfter="{Binding CreatedAfter, Mode=TwoWay}"
                                     ModifiedBefore="{Binding ModifiedBefore, Mode=TwoWay}"
                                     ModifiedAfter="{Binding ModifiedAfter, Mode=TwoWay}"
                                     FilterCommand="{Binding LoadModelsCommand}"/>

            <!-- Data Grid -->
            <DataGrid ItemsSource="{Binding Models}"
                      Style="{StaticResource DefaultDataGridStyle}"
                      SelectedItem="{Binding EditableModel, Mode=TwoWay}">
                <DataGrid.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ShowDetailedInfoCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}" />
                </DataGrid.InputBindings>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding AddressId}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.City}" Binding="{Binding City}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.FirstLine}" Binding="{Binding FirstLine}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.SecondLine}" Binding="{Binding SecondLine}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.ZipCode}" Binding="{Binding ZipCode}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.Country}" Binding="{Binding Country.Name}" />
                    <DataGridTextColumn Header="{x:Static generic:Resources.CreatedDate}" Binding="{Binding CreatedDate}"/>
                    <DataGridTextColumn Header="{x:Static generic:Resources.ModifiedDate}" Binding="{Binding ModifiedDate}"/>
                    <DataGridTextColumn Header="{x:Static generic:Resources.DeletedDate}" Binding="{Binding DeletedDate}"
                                      Visibility="{Binding ShowDeleted, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference Name=DataContext}}"/>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Pagination -->
            <customControls:PaginationControl CurrentPage="{Binding CurrentPage}" 
                                  TotalItemCount="{Binding TotalItemCount}"
                                  ModelsPerPage="{Binding PageSize}"
                                  CanLoadPreviousPage="{Binding CanLoadPreviousPage}" 
                                  CanLoadNextPage="{Binding CanLoadNextPage}" 
                                  PreviousPageCommand="{Binding LoadPreviousPageCommand}" 
                                  NextPageCommand="{Binding LoadNextPageCommand}" />
        </StackPanel>
    </StackPanel>
</UserControl>
