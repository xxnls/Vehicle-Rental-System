<UserControl
    x:Class="BackOffice.Views.Other.RentalPlacesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:BackOffice.Views.CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:generic="clr-namespace:BackOffice.Resources.Generic"
    xmlns:helpers="clr-namespace:BackOffice.Helpers"
    xmlns:local="clr-namespace:BackOffice.Views.Other"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:other="clr-namespace:BackOffice.ViewModels.Other"
    xmlns:res="clr-namespace:BackOffice.Resources.RentalPlaces"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.DataContext>
        <other:RentalPlacesViewModel x:Name="DataContext" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <Style TargetType="Label">
            <Setter Property="ContentStringFormat" Value="{}{0}:" />
        </Style>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical">
        <Grid Visibility="{Binding IsCreatingOrEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Style="{StaticResource CreateEditBorderStyle}">
                <StackPanel Orientation="Vertical">

                    <DockPanel Height="25">
                        <Label Content="{x:Static res:Resources.AddressFields}" DockPanel.Dock="Left" />
                        <Separator />
                    </DockPanel>

                    <Label Content="{x:Static res:Resources.Country}" />
                    <TextBox IsReadOnly="True" Text="{Binding EditableModel.Address.Country.Name, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        helpers:ValidationHelper.PropertyName="Country"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />
                    <Button
                        Width="100"
                        HorizontalAlignment="Left"
                        Command="{Binding ShowSelectorDialogCommand}"
                        CommandParameter="{Binding SelectCountryParameters}"
                        Content="{x:Static res:Resources.SelectCountry}"
                        Style="{StaticResource DefaultButtonStyle}" />

                    <Label Content="{x:Static res:Resources.City}" />
                    <TextBox Text="{Binding EditableModel.Address.City, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        helpers:ValidationHelper.PropertyName="City"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.FirstLine}" />
                    <TextBox Text="{Binding EditableModel.Address.FirstLine, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        helpers:ValidationHelper.PropertyName="FirstLine"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.SecondLine}" />
                    <TextBox Text="{Binding EditableModel.Address.SecondLine, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        helpers:ValidationHelper.PropertyName="SecondLine"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.ZipCode}" />
                    <TextBox Text="{Binding EditableModel.Address.ZipCode, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        helpers:ValidationHelper.PropertyName="ZipCode"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <DockPanel Height="25">
                        <Label Content="{x:Static res:Resources.CoordinatesFields}" DockPanel.Dock="Left" />
                        <Separator />
                    </DockPanel>

                    <Label Content="{x:Static res:Resources.GpsLatitude}" />
                    <TextBox Text="{Binding EditableModel.Location.GpsLatitude, UpdateSourceTrigger=PropertyChanged, StringFormat=N6}" />
                    <TextBlock
                        helpers:ValidationHelper.PropertyName="GpsLatitude"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.GpsLongitude}" />
                    <TextBox Text="{Binding EditableModel.Location.GpsLongitude, UpdateSourceTrigger=PropertyChanged, StringFormat=N6}" />
                    <TextBlock
                        helpers:ValidationHelper.PropertyName="GpsLongitude"
                        Foreground="{StaticResource ErrorBrush}"
                        Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />
                </StackPanel>
            </Border>

            <customControls:CreateEditSaveCancelControl
                Grid.Row="1"
                CancelCommand="{Binding SwitchToListModeCommand}"
                HasErrors="{Binding HasErrors}"
                SaveCommand="{Binding CreateModelCommand}"
                Visibility="{Binding IsCreating, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <customControls:CreateEditSaveCancelControl
                Grid.Row="1"
                CancelCommand="{Binding SwitchToListModeCommand}"
                HasErrors="{Binding HasErrors}"
                SaveCommand="{Binding UpdateModelCommand}"
                Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>

        <!--  List Mode  -->
        <StackPanel Visibility="{Binding IsListVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!--  CRUD Buttons  -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <customControls:CRUDButtonsControl
                    Grid.Column="0"
                    AddCommand="{Binding SwitchToCreateModeCommand}"
                    DeleteCommand="{Binding DeleteModelCommand}"
                    DeleteVisibility="{Binding ShowDeleted, Converter={StaticResource InverseBooleanConverter}}"
                    EditCommand="{Binding SwitchToEditModeCommand}"
                    LoadCommand="{Binding LoadModelsCommand}"
                    RestoreCommand="{Binding RestoreModelCommand}"
                    RestoreCommandParameter="{Binding EditableModel.RentalPlaceId}"
                    RestoreVisibility="{Binding ShowDeleted}" />

                <customControls:SearchControl Grid.Column="1" SearchCommand="{Binding SearchCommand}" />

                <customControls:FilterButtonsControl
                    Grid.Column="2"
                    Margin="0,0,5,0"
                    ShowDeletedModelsCommand="{Binding ShowDeletedModelsCommand}"
                    ShowFilterOptionsCommand="{Binding ShowFilterOptionsCommand}" />
            </Grid>

            <!--  Filter Options  -->
            <customControls:FilterOptionsControl
                CreatedAfter="{Binding CreatedAfter, Mode=TwoWay}"
                CreatedBefore="{Binding CreatedBefore, Mode=TwoWay}"
                FilterCommand="{Binding LoadModelsCommand}"
                ModifiedAfter="{Binding ModifiedAfter, Mode=TwoWay}"
                ModifiedBefore="{Binding ModifiedBefore, Mode=TwoWay}"
                Visibility="{Binding IsFiltering, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <!--  Data Grid  -->
            <DataGrid
                x:Name="MainDataGrid"
                ItemsSource="{Binding Models}"
                SelectedItem="{Binding EditableModel, Mode=TwoWay}"
                Style="{StaticResource DefaultDataGridStyle}">
                <DataGrid.InputBindings>
                    <MouseBinding
                        Command="{Binding ShowDetailedInfoCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                        Gesture="LeftDoubleClick" />
                </DataGrid.InputBindings>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding RentalPlaceId}" Header="ID" />
                    <DataGridTextColumn Binding="{Binding Address.City}" Header="{x:Static res:Resources.City}" />
                    <DataGridTextColumn Binding="{Binding Address.FirstLine}" Header="{x:Static res:Resources.FirstLine}" />
                    <DataGridTextColumn Binding="{Binding Address.SecondLine}" Header="{x:Static res:Resources.SecondLine}" />
                    <DataGridTextColumn Binding="{Binding Address.ZipCode}" Header="{x:Static res:Resources.ZipCode}" />
                    <DataGridTextColumn Binding="{Binding Address.Country.Name}" Header="{x:Static res:Resources.Country}" />
                    <DataGridTextColumn Binding="{Binding Location.GpsLatitude, StringFormat=N2}" Header="{x:Static res:Resources.GpsLatitude}" />
                    <DataGridTextColumn Binding="{Binding Location.GpsLongitude, StringFormat=N2}" Header="{x:Static res:Resources.GpsLongitude}" />
                    <DataGridTextColumn Binding="{Binding CreatedDate}" Header="{x:Static generic:Resources.CreatedDate}" />
                    <DataGridTextColumn Binding="{Binding ModifiedDate}" Header="{x:Static generic:Resources.ModifiedDate}" />
                    <DataGridTextColumn
                        Binding="{Binding DeletedDate}"
                        Header="{x:Static generic:Resources.DeletedDate}"
                        Visibility="{Binding ShowDeleted, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference Name=DataContext}}" />
                </DataGrid.Columns>
            </DataGrid>

            <!--  Pagination  -->
            <customControls:PaginationControl
                CanLoadNextPage="{Binding CanLoadNextPage}"
                CanLoadPreviousPage="{Binding CanLoadPreviousPage}"
                CurrentPage="{Binding CurrentPage}"
                ModelsPerPage="{Binding PageSize}"
                NextPageCommand="{Binding LoadNextPageCommand}"
                PreviousPageCommand="{Binding LoadPreviousPageCommand}"
                TotalItemCount="{Binding TotalItemCount}" />
        </StackPanel>
    </StackPanel>
</UserControl>
