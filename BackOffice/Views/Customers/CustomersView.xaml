<UserControl
    x:Class="BackOffice.Views.Customers.CustomersView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:addresses="clr-namespace:BackOffice.Resources.Addresses"
    xmlns:customControls="clr-namespace:BackOffice.Views.CustomControls"
    xmlns:customers="clr-namespace:BackOffice.ViewModels.Customers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:emp="clr-namespace:BackOffice.Resources.Employees"
    xmlns:generic="clr-namespace:BackOffice.Resources.Generic"
    xmlns:helpers="clr-namespace:BackOffice.Helpers"
    xmlns:local="clr-namespace:BackOffice.Views.Customers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:BackOffice.Resources.Customers"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.DataContext>
        <customers:CustomersViewModel x:Name="DataContext" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <Style TargetType="Label">
            <Setter Property="ContentStringFormat" Value="{}{0}:" />
        </Style>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical">
            <Grid Visibility="{Binding IsCreatingOrEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Style="{StaticResource CreateEditBorderStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <!--  Basic Information  -->
                        <StackPanel
                            Grid.Row="0"
                            Grid.Column="0"
                            Orientation="Vertical">

                            <DockPanel Height="25">
                                <Label Content="{x:Static res:Resources.BasicInformationFields}" DockPanel.Dock="Left" />
                                <Separator />
                            </DockPanel>

                            <Label Content="{x:Static emp:Resources.FirstName}" />
                            <TextBox Text="{Binding EditableModel.FirstName, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="FirstName"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="{x:Static emp:Resources.LastName}" />
                            <TextBox Text="{Binding EditableModel.LastName, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="LastName"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="E-Mail" />
                            <TextBox Text="{Binding EditableModel.Email, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="Email"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="{x:Static emp:Resources.PhoneNumber}" />
                            <TextBox Text="{Binding EditableModel.PhoneNumber, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="PhoneNumber"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <StackPanel Visibility="{Binding IsCreating, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label Content="{x:Static emp:Resources.Password}" />
                                <TextBox Text="{Binding EditableModel.Password, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock
                                    helpers:ValidationHelper.PropertyName="Password"
                                    Foreground="{StaticResource ErrorBrush}"
                                    Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />
                            </StackPanel>

                            <Label Content="{x:Static res:Resources.CompanyName}" />
                            <TextBox Text="{Binding EditableModel.CompanyName, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="CompanyName"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="{x:Static res:Resources.CustomerType}" />
                            <TextBox IsReadOnly="True" Text="{Binding EditableModel.CustomerType.CustomerType}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="CustomerType"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />
                            <Button
                                Width="150"
                                Margin="0,5,0,0"
                                HorizontalAlignment="Left"
                                Command="{Binding ShowSelectorDialogCommand}"
                                CommandParameter="{Binding SelectCustomerTypeParameters}"
                                Content="{x:Static res:Resources.SelectCustomerType}"
                                Style="{StaticResource DefaultButtonStyle}" />
                        </StackPanel>

                        <!--  Address  -->
                        <StackPanel
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Orientation="Vertical">

                            <DockPanel Height="25">
                                <Label Content="{x:Static emp:Resources.AddressFields}" DockPanel.Dock="Left" />
                                <Separator />
                            </DockPanel>

                            <Label Content="{x:Static addresses:Resources.FirstLine}" />
                            <TextBox Text="{Binding EditableModel.Address.FirstLine, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="Address.FirstLine"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="{x:Static addresses:Resources.SecondLine}" />
                            <TextBox Text="{Binding EditableModel.Address.SecondLine, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="Address.SecondLine"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="{x:Static addresses:Resources.City}" />
                            <TextBox Text="{Binding EditableModel.Address.City, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="Address.City"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="{x:Static addresses:Resources.ZipCode}" />
                            <TextBox Text="{Binding EditableModel.Address.ZipCode, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="Address.ZipCode"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                            <Label Content="{x:Static addresses:Resources.Country}" />
                            <TextBox IsReadOnly="True" Text="{Binding EditableModel.Address.Country.Name}" />
                            <TextBlock
                                helpers:ValidationHelper.PropertyName="Address.Country"
                                Foreground="{StaticResource ErrorBrush}"
                                Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />
                            <Button
                                Width="150"
                                Margin="0,5,0,0"
                                HorizontalAlignment="Left"
                                Command="{Binding ShowSelectorDialogCommand}"
                                CommandParameter="{Binding SelectCountryParameters}"
                                Content="{x:Static emp:Resources.SelectCountry}"
                                Style="{StaticResource DefaultButtonStyle}" />
                        </StackPanel>
                    </Grid>
                </Border>

                <!--  Create/Edit Save/Cancel Controls  -->
                <customControls:CreateEditSaveCancelControl
                    Grid.Row="1"
                    CancelCommand="{Binding SwitchToListModeCommand}"
                    HasErrors="{Binding HasErrors}"
                    SaveCommand="{Binding CreateModelCommand}"
                    Visibility="{Binding IsCreating, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <customControls:CreateEditSaveCancelControl
                    Grid.Row="1"
                    CancelCommand="{Binding SwitchToListModeCommand}"
                    HasErrors="{Binding HasErrors}"
                    SaveCommand="{Binding UpdateModelCommand}"
                    Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>

            <!--  List View  -->
            <StackPanel Visibility="{Binding IsListVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <customControls:CRUDButtonsControl
                        AddCommand="{Binding SwitchToCreateModeCommand}"
                        DeleteCommand="{Binding DeleteModelCommand}"
                        DeleteVisibility="{Binding ShowDeleted, Converter={StaticResource InverseBooleanConverter}}"
                        EditCommand="{Binding SwitchToEditModeCommand}"
                        LoadCommand="{Binding LoadModelsCommand}"
                        RestoreCommand="{Binding RestoreModelCommand}"
                        RestoreCommandParameter="{Binding EditableModel.Id}"
                        RestoreVisibility="{Binding ShowDeleted}" />

                    <customControls:SearchControl SearchCommand="{Binding SearchCommand}" />

                    <customControls:FilterButtonsControl
                        Grid.Column="2"
                        Margin="0,0,5,0"
                        ShowDeletedModelsCommand="{Binding ShowDeletedModelsCommand}"
                        ShowFilterOptionsCommand="{Binding ShowFilterOptionsCommand}" />
                </Grid>

                <DataGrid
                    x:Name="MainDataGrid"
                    ItemsSource="{Binding Models}"
                    SelectedItem="{Binding EditableModel, Mode=TwoWay}"
                    Style="{StaticResource DefaultDataGridStyle}">
                    <DataGrid.InputBindings>
                        <MouseBinding
                            Command="{Binding ShowDetailedInfoCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}"
                            Gesture="LeftDoubleClick" />
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id}" Header="ID" />
                        <DataGridTextColumn Binding="{Binding FirstName}" Header="{x:Static emp:Resources.FirstName}" />
                        <DataGridTextColumn Binding="{Binding LastName}" Header="{x:Static emp:Resources.LastName}" />
                        <DataGridTextColumn Binding="{Binding Email}" Header="E-Mail" />
                        <DataGridTextColumn Binding="{Binding PhoneNumber}" Header="{x:Static emp:Resources.PhoneNumber}" />
                        <DataGridTextColumn Binding="{Binding CompanyName}" Header="{x:Static res:Resources.CompanyName}" />
                        <DataGridTextColumn Binding="{Binding CustomerType.CustomerType}" Header="{x:Static res:Resources.CustomerType}" />
                        <DataGridTextColumn Binding="{Binding Address.City}" Header="{x:Static res:Resources.City}" />
                        <DataGridTextColumn
                            Binding="{Binding ApprovedA}"
                            CellStyle="{StaticResource ApprovedACellStyle}"
                            Header="A" />
                        <DataGridTextColumn
                            Binding="{Binding ApprovedB}"
                            CellStyle="{StaticResource ApprovedBCellStyle}"
                            Header="B" />
                        <DataGridTextColumn
                            Binding="{Binding ApprovedC}"
                            CellStyle="{StaticResource ApprovedCCellStyle}"
                            Header="C" />
                        <DataGridTextColumn Binding="{Binding CreatedDate}" Header="{x:Static generic:Resources.CreatedDate}" />
                        <DataGridTextColumn Binding="{Binding ModifiedDate}" Header="{x:Static generic:Resources.ModifiedDate}" />
                        <DataGridTextColumn
                            Binding="{Binding DeletedDate}"
                            Header="{x:Static generic:Resources.DeletedDate}"
                            Visibility="{Binding ShowDeleted, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference Name=DataContext}}" />
                    </DataGrid.Columns>
                </DataGrid>

                <!--  Pagination  -->
                <customControls:PaginationControl
                    CanLoadNextPage="{Binding CanLoadNextPage}"
                    CanLoadPreviousPage="{Binding CanLoadPreviousPage}"
                    CurrentPage="{Binding CurrentPage}"
                    ModelsPerPage="{Binding PageSize}"
                    NextPageCommand="{Binding LoadNextPageCommand}"
                    PreviousPageCommand="{Binding LoadPreviousPageCommand}"
                    TotalItemCount="{Binding TotalItemCount}" />
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
