<UserControl x:Class="BackOffice.Views.Vehicles.VehiclesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BackOffice.Views.Vehicles"
             xmlns:customControls="clr-namespace:BackOffice.Views.CustomControls"
             xmlns:helpers="clr-namespace:BackOffice.Helpers"
             xmlns:res="clr-namespace:BackOffice.Resources.Vehicles"
             xmlns:generic="clr-namespace:BackOffice.Resources.Generic"
             xmlns:vehicles="clr-namespace:BackOffice.ViewModels.Vehicles"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <vehicles:VehiclesViewModel x:Name="DataContext"/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <Style TargetType="Label">
            <Setter Property="ContentStringFormat" Value="{}{0}:"/>
        </Style>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical">
        <Grid Visibility="{Binding IsCreating, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Style="{StaticResource CreateEditBorderStyle}">
                <StackPanel Orientation="Vertical">
                    <!-- Input Fields -->
                    <Label Content="VIN"/>
                    <TextBox x:Name="VINField" Text="{Binding EditableModel.Vin, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="VIN"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.LicensePlate}"/>
                    <TextBox x:Name="LicensePlateField" Text="{Binding EditableModel.LicensePlate, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="LicensePlate"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.Color}"/>
                    <TextBox x:Name="ColorField" Text="{Binding EditableModel.Color, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="Color"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.ManufactureYear}"/>
                    <TextBox x:Name="ManufactureYearField" Text="{Binding EditableModel.ManufactureYear, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="ManufactureYear"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.VehicleType}"/>
                    <ComboBox x:Name="VehicleTypeComboBox" SelectedItem="{Binding EditableModel.VehicleTypeId, UpdateSourceTrigger=PropertyChanged}">
                        <!-- ItemsSource binding can be added if needed -->
                    </ComboBox>

                    <Label Content="{x:Static res:Resources.VehicleModel}"/>
                    <ComboBox x:Name="VehicleModelComboBox" SelectedItem="{Binding EditableModel.VehicleModelId, UpdateSourceTrigger=PropertyChanged}">
                        <!-- ItemsSource binding can be added if needed -->
                    </ComboBox>

                    <Label Content="{x:Static res:Resources.RentalPlace}"/>
                    <ComboBox x:Name="RentalPlaceComboBox" SelectedItem="{Binding EditableModel.RentalPlaceId, UpdateSourceTrigger=PropertyChanged}">
                        <!-- ItemsSource binding can be added if needed -->
                    </ComboBox>
                </StackPanel>
            </Border>

            <!-- Action Buttons -->
            <customControls:CreateEditSaveCancelControl Grid.Row="1"
                                             SaveCommand="{Binding CreateModelCommand}"
                                             CancelCommand="{Binding SwitchToListModeCommand}"
                                             HasErrors="{Binding HasErrors}"/>
        </Grid>

        <Grid Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Style="{StaticResource CreateEditBorderStyle}">
                <StackPanel Orientation="Vertical">
                    <!-- Input Fields (same as Create, just for Editing) -->
                    <Label Content="VIN"/>
                    <TextBox x:Name="EditVINField" Text="{Binding EditableModel.Vin, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="VIN"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.LicensePlate}"/>
                    <TextBox x:Name="EditLicensePlateField" Text="{Binding EditableModel.LicensePlate, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="LicensePlate"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.Color}"/>
                    <TextBox x:Name="EditColorField" Text="{Binding EditableModel.Color, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="Color"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.ManufactureYear}"/>
                    <TextBox x:Name="EditManufactureYearField" Text="{Binding EditableModel.ManufactureYear, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Foreground="{StaticResource ErrorBrush}"
                               helpers:ValidationHelper.PropertyName="ManufactureYear"
                               Text="{Binding (helpers:ValidationHelper.ErrorText), RelativeSource={RelativeSource Self}}" />

                    <Label Content="{x:Static res:Resources.VehicleType}"/>
                    <ComboBox x:Name="EditVehicleTypeComboBox" SelectedItem="{Binding EditableModel.VehicleTypeId, UpdateSourceTrigger=PropertyChanged}">
                        <!-- ItemsSource binding can be added if needed -->
                    </ComboBox>

                    <Label Content="{x:Static res:Resources.VehicleModel}"/>
                    <ComboBox x:Name="EditVehicleModelComboBox" SelectedItem="{Binding EditableModel.VehicleModelId, UpdateSourceTrigger=PropertyChanged}">
                        <!-- ItemsSource binding can be added if needed -->
                    </ComboBox>

                    <Label Content="{x:Static res:Resources.RentalPlace}"/>
                    <ComboBox x:Name="EditRentalPlaceComboBox" SelectedItem="{Binding EditableModel.RentalPlaceId, UpdateSourceTrigger=PropertyChanged}">
                        <!-- ItemsSource binding can be added if needed -->
                    </ComboBox>
                </StackPanel>
            </Border>

            <!-- Action Buttons -->
            <customControls:CreateEditSaveCancelControl Grid.Row="1"
                                            SaveCommand="{Binding UpdateModelCommand}"
                                            CancelCommand="{Binding SwitchToListModeCommand}"
                                            HasErrors="{Binding HasErrors}"/>
        </Grid>

        <StackPanel Visibility="{Binding IsListVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <customControls:CRUDButtonsControl LoadCommand="{Binding LoadModelsCommand}"
                                   AddCommand="{Binding SwitchToCreateModeCommand}"
                                   EditCommand="{Binding SwitchToEditModeCommand}"
                                   DeleteCommand="{Binding DeleteModelCommand}"
                                   DeleteVisibility="{Binding ShowDeleted, Converter={StaticResource InverseBooleanConverter}}"
                                   RestoreCommand="{Binding RestoreModelCommand}"
                                   RestoreCommandParameter="{Binding EditableModel.VehicleId}"
                                   RestoreVisibility="{Binding ShowDeleted}"
                                   Grid.Column="0"/>

                <customControls:SearchControl Grid.Column="1"
                                  SearchCommand="{Binding SearchCommand}"/>

                <customControls:FilterButtonsControl ShowFilterOptionsCommand="{Binding ShowFilterOptionsCommand}"
                                         ShowDeletedModelsCommand="{Binding ShowDeletedModelsCommand}"
                                         Grid.Column="2"
                                         Margin="0,0,5,0"/>
            </Grid>

            <customControls:FilterOptionsControl Visibility="{Binding IsFiltering, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     CreatedBefore="{Binding CreatedBefore, Mode=TwoWay}"
                                     CreatedAfter="{Binding CreatedAfter, Mode=TwoWay}"
                                     ModifiedBefore="{Binding ModifiedBefore, Mode=TwoWay}"
                                     ModifiedAfter="{Binding ModifiedAfter, Mode=TwoWay}"
                                     FilterCommand="{Binding LoadModelsCommand}"/>

            <!--Data Grid-->
            <DataGrid x:Name="MainDataGrid" 
                      ItemsSource="{Binding Models}"
                      Style="{StaticResource DefaultDataGridStyle}"
                      SelectedItem="{Binding EditableModel, Mode=TwoWay}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding VehicleId}" />
                    <DataGridTextColumn Header="VIN" Binding="{Binding Vin}" />
                    <DataGridTextColumn Header="License Plate" Binding="{Binding LicensePlate}" />
                    <DataGridTextColumn Header="Color" Binding="{Binding Color}" />
                    <DataGridTextColumn Header="Year" Binding="{Binding ManufactureYear}" />
                    <DataGridTextColumn Header="Type" Binding="{Binding VehicleType.Name}" />
                    <DataGridTextColumn Header="Model" Binding="{Binding VehicleModel.Name}" />
                    <DataGridTextColumn Header="Country" Binding="{Binding RentalPlace.CountryName}" />
                    <DataGridTextColumn Header="City" Binding="{Binding RentalPlace.City}" />
                    <DataGridCheckBoxColumn Header="Available" Binding="{Binding IsAvailableForRent}" />
                    <DataGridTextColumn Header="Mileage" Binding="{Binding CurrentMileage}" />
                    <DataGridTextColumn Header="Last Maintenance" Binding="{Binding LastMaintenanceDate, StringFormat='{}{0:yyyy-MM-dd}'}" />
                    <DataGridTextColumn Header="Daily Rate" Binding="{Binding CustomDailyRate, StringFormat='{}{0:C}'}" />
                    <DataGridTextColumn Header="Weekly Rate" Binding="{Binding CustomWeeklyRate, StringFormat='{}{0:C}'}" />
                    <DataGridTextColumn Header="Notes" Binding="{Binding Notes}" />
                </DataGrid.Columns>
            </DataGrid>

            <!-- Pagination -->
            <customControls:PaginationControl CurrentPage="{Binding CurrentPage}" 
                                  TotalItemCount="{Binding TotalItemCount}"
                                  ModelsPerPage="{Binding PageSize}" 
                                  CanLoadPreviousPage="{Binding CanLoadPreviousPage}" 
                                  CanLoadNextPage="{Binding CanLoadNextPage}" 
                                  PreviousPageCommand="{Binding LoadPreviousPageCommand}" 
                                  NextPageCommand="{Binding LoadNextPageCommand}" />
        </StackPanel>
    </StackPanel>
</UserControl>
