<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  DataGrid Style  -->
    <Style x:Key="DefaultDataGridStyle" TargetType="DataGrid">
        <!--  Set basic styling  -->
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Margin" Value="10,0,10,10" />
        <Setter Property="AlternatingRowBackground" Value="#f0f0f0" />
        <Setter Property="RowBackground" Value="White" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="HeadersVisibility" Value="Column" />

        <!--  Style for the headers  -->
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="MaxWidth" Value="250" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="MaxWidth" Value="250" />
                </Style>
            </Setter.Value>
        </Setter>

        <!--  Style for the rows  -->
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Height" Value="25" />
                    <Setter Property="Padding" Value="5" />
                    <!--<Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Background" Value="#c0e8f9"/>
                        </DataTrigger>
                    </Style.Triggers>-->
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RequestStatusCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RequestStatus}" Value="Pending">
                <Setter Property="Background" Value="{StaticResource PendingBrush}" />
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RequestStatus}" Value="Approved">
                <Setter Property="Background" Value="{StaticResource ApprovedBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RequestStatus}" Value="Cancelled">
                <Setter Property="Background" Value="{StaticResource CancelledBrush}" />
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RequestStatus}" Value="Rejected">
                <Setter Property="Background" Value="{StaticResource RejectedBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PaymentStatusCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <DataTrigger Binding="{Binding PaymentStatus}" Value="Pending">
                <Setter Property="Background" Value="{StaticResource PendingBrush}" />
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding PaymentStatus}" Value="Completed">
                <Setter Property="Background" Value="{StaticResource PaidBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding PaymentStatus}" Value="Failed">
                <Setter Property="Background" Value="{StaticResource RejectedBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding PaymentStatus}" Value="Refunded">
                <Setter Property="Background" Value="{StaticResource InProgressBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TransactionStatusCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <DataTrigger Binding="{Binding TransactionStatus}" Value="Pending">
                <Setter Property="Background" Value="{StaticResource PendingBrush}" />
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TransactionStatus}" Value="Completed">
                <Setter Property="Background" Value="{StaticResource PaidBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TransactionStatus}" Value="Failed">
                <Setter Property="Background" Value="{StaticResource RejectedBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TransactionStatus}" Value="Refunded">
                <Setter Property="Background" Value="{StaticResource InProgressBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RentalStatusCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RentalStatus}" Value="AwaitingPickup">
                <Setter Property="Background" Value="{StaticResource PendingBrush}" />
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RentalStatus}" Value="Finished">
                <Setter Property="Background" Value="{StaticResource ApprovedBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RentalStatus}" Value="InProgress">
                <Setter Property="Background" Value="{StaticResource InProgressBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RentalStatus}" Value="Cancelled">
                <Setter Property="Background" Value="{StaticResource RejectedBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Style for the buttons in the CRUDButtonsControl  -->
    <Style x:Key="DefaultButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource ButtonEnabledForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBrush}" />
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonDisabledForegroundBrush}" />
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Create/Edit Border Style  -->
    <Style x:Key="CreateEditBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Margin" Value="10,0,10,10" />
        <Setter Property="Padding" Value="10,0,10,10" />
    </Style>


</ResourceDictionary>